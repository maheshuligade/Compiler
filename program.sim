START
MOV BP,257
MOV SP,257
PUSH BP
MOV R0,SP
MOV R1,4
ADD R0,R1
MOV SP,R0
PUSH BP
call initialize
call main
HALT

main:
PUSH BP
MOV BP,SP
MOV R0,1
PUSH R0
MOV R1,0
MOV R0,4
ADD R0,R1
PUSH R0
PUSH R0
CALL allocate
POP R0
POP R0
MOV R1,BP
MOV R2,3
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1

IN R0
MOV [R1],R0


IN R0
MOV [R1],R0



MOV R1,[R0]
OUT R1



MOV R1,[R0]
OUT R1

MOV R1,0
MOV R0,3
ADD R0,R1
PUSH R0
PUSH R0
CALL free
POP R0
POP R0
MOV R1,BP
MOV R2,3
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1


MOV R1,[R0]
OUT R1



MOV R1,[R0]
OUT R1

MOV R0,SP
MOV R1,1
SUB R0,R1
MOV SP,R0
MOV R0,BP
MOV R1,2
SUB R0,R1
MOV R1,0
MOV [R0],R1
MOV SP,BP
POP BP
RET


initialize:
PUSH BP
MOV BP,SP
MOV  R0,1
PUSH R0
MOV [256],0
MOV R0,0
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV [R1],R0
LabelWhile:
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV R0,[R1]
MOV R1,256
LT R0,R1
JZ R0,LabelEndwhile
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV R0,[R1]
MOV [R0],0
MOV R2,1
ADD R0,R2
MOV [R1],R0
JMP LabelWhile
LabelEndwhile:
MOV R0,0
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV [R1],R0
LabelWhile2:
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV R0,[R1]
MOV R1,248
LT R0,R1
JZ R0,LabelEndwhile2
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV R0,[R1]
MOV R2,8
ADD R2,R0
MOV [R0],R2
MOV R2,8
ADD R0,R2
MOV [R1],R0
JMP LabelWhile2
LabelEndwhile2:
POP R0
MOV R1,BP
MOV R2,2
SUB R1,R2
MOV R0,0
MOV [R1],R0
MOV SP,BP
POP BP
RET


allocate:
PUSH BP
MOV BP,SP
MOV SP,BP
POP BP
RET


free:
PUSH BP
MOV BP,SP
MOV SP,BP
POP BP
RET
