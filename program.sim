START
MOV BP,257
MOV SP,257
PUSH BP
MOV R0,SP
MOV R1,23
ADD R0,R1
MOV SP,R0
PUSH BP
call initialize
call main
HALT

main:
PUSH BP
MOV BP,SP
MOV R0,1
PUSH R0
MOV R0,2
PUSH R0
MOV R0,3
PUSH R0

MOV R2,0
MOV R1,2
MOV R2,BP
ADD R1,R2
IN R0
MOV [R1],R0

MOV R1,0
MOV R0,1
MOV R1,BP
ADD R0,R1
MOV R1,0
MOV [R0],R1

LABEL0:
MOV R1,0
MOV R0,1
MOV R1,BP
ADD R0,R1
MOV R0,[R0]
MOV R2,0
MOV R1,2
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
LT R0,R1
JZ R0,LABEL1

MOV R2,3
MOV R4,0
MOV R3,1
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
ADD R2,R3
IN R1
MOV [R2],R1

MOV R2,0
MOV R1,1
MOV R2,BP
ADD R1,R2

MOV R3,0
MOV R2,1
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
MOV R3,1
ADD R2,R3

MOV [R1],R2
JMP LABEL0
LABEL1:
MOV R1,0
MOV R0,3
MOV R1,BP
ADD R0,R1
PUSH R0
MOV R1,0
PUSH R1
MOV R2,0
PUSH R2


MOV R4,0
MOV R3,2
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
MOV R4,1
SUB R3,R4

PUSH R3
PUSH R3
CALL quicksort
POP R3
POP R3
POP R2
POP R1
POP R0
MOV R4,BP
MOV R5,8
ADD R4,R5
MOV R4,[R4]
MOV [R0],R4
MOV R4,0
MOV R3,1
MOV R4,BP
ADD R3,R4
MOV R4,0
MOV [R3],R4

LABEL2:
MOV R4,0
MOV R3,1
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
MOV R5,0
MOV R4,2
MOV R5,BP
ADD R4,R5
MOV R4,[R4]
LT R3,R4
JZ R3,LABEL3

MOV R4,3
MOV R6,0
MOV R5,1
MOV R6,BP
ADD R5,R6
MOV R5,[R5]
ADD R4,R5

MOV R5,[R4]
OUT R5

MOV R5,0
MOV R4,1
MOV R5,BP
ADD R4,R5

MOV R6,0
MOV R5,1
MOV R6,BP
ADD R5,R6
MOV R5,[R5]
MOV R6,1
ADD R5,R6

MOV [R4],R5
JMP LABEL2
LABEL3:
MOV R3,SP
MOV R4,3
SUB R3,R4
MOV SP,R3
MOV R3,BP
MOV R4,2
SUB R3,R4
MOV R4,0
MOV [R3],R4
MOV SP,BP
POP BP
RET

swap:
PUSH BP
MOV BP,SP
MOV R0,1
PUSH R0
MOV R1,0
MOV R0,1
MOV R1,BP
ADD R0,R1
MOV R2,0
MOV R1,-4
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV R1,[R1]
MOV [R0],R1
MOV R1,0
MOV R0,-4
MOV R1,BP
ADD R0,R1
MOV R0,[R0]
MOV R2,0
MOV R1,-3
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV R1,[R1]
MOV [R0],R1
MOV R1,0
MOV R0,-3
MOV R1,BP
ADD R0,R1
MOV R0,[R0]
MOV R2,0
MOV R1,1
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1
MOV R0,SP
MOV R1,3
SUB R0,R1
MOV SP,R0
MOV R0,BP
MOV R1,2
SUB R0,R1
MOV R1,0
MOV [R0],R1
MOV SP,BP
POP BP
RET

partition:
PUSH BP
MOV BP,SP
MOV R0,1
PUSH R0
MOV R0,2
PUSH R0
MOV R0,3
PUSH R0
MOV R0,4
PUSH R0
MOV R1,0
MOV R0,1
MOV R1,BP
ADD R0,R1
MOV R1,3
MOV R3,0
MOV R2,-3
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1
MOV R1,0
MOV R0,3
MOV R1,BP
ADD R0,R1
MOV R2,0
MOV R1,-4
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1
MOV R1,0
MOV R0,2
MOV R1,BP
ADD R0,R1
MOV R2,0
MOV R1,-4
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1

LABEL4:
MOV R1,0
MOV R0,3
MOV R1,BP
ADD R0,R1
MOV R0,[R0]
MOV R2,0
MOV R1,-3
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
LT R0,R1
JZ R0,LABEL5

MOV R1,3
MOV R3,0
MOV R2,3
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
ADD R1,R2
MOV R1,[R1]
MOV R3,0
MOV R2,1
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
LE R1,R2
JZ R1,LABEL6
MOV R3,0
MOV R2,4
MOV R3,BP
ADD R2,R3
PUSH R0
PUSH R1
PUSH R2
MOV R4,3
MOV R6,0
MOV R5,2
MOV R6,BP
ADD R5,R6
MOV R5,[R5]
ADD R4,R5
PUSH R4
MOV R4,3
MOV R6,0
MOV R5,3
MOV R6,BP
ADD R5,R6
MOV R5,[R5]
ADD R4,R5
PUSH R4
PUSH R4
CALL swap
POP R4
POP R4
POP R4
POP R2
POP R1
POP R0
MOV R3,BP
MOV R4,10
ADD R3,R4
MOV R3,[R3]
MOV [R2],R3
MOV R3,0
MOV R2,2
MOV R3,BP
ADD R2,R3

MOV R4,0
MOV R3,2
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
MOV R4,1
ADD R3,R4

MOV [R2],R3
LABEL6:
MOV R2,0
MOV R1,3
MOV R2,BP
ADD R1,R2

MOV R3,0
MOV R2,3
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
MOV R3,1
ADD R2,R3

MOV [R1],R2
JMP LABEL4
LABEL5:
MOV R1,0
MOV R0,4
MOV R1,BP
ADD R0,R1
PUSH R0
MOV R2,3
MOV R4,0
MOV R3,2
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
ADD R2,R3
PUSH R2
MOV R2,3
MOV R4,0
MOV R3,-3
MOV R4,BP
ADD R3,R4
MOV R3,[R3]
ADD R2,R3
PUSH R2
PUSH R2
CALL swap
POP R2
POP R2
POP R2
POP R0
MOV R1,BP
MOV R2,8
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1
MOV R0,SP
MOV R1,6
SUB R0,R1
MOV SP,R0
MOV R0,BP
MOV R1,2
SUB R0,R1
MOV R2,0
MOV R1,2
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
MOV [R0],R1
MOV SP,BP
POP BP
RET

quicksort:
PUSH BP
MOV BP,SP
MOV R0,1
PUSH R0
MOV R0,2
PUSH R0

MOV R1,0
MOV R0,-4
MOV R1,BP
ADD R0,R1
MOV R0,[R0]
MOV R2,0
MOV R1,-3
MOV R2,BP
ADD R1,R2
MOV R1,[R1]
LT R0,R1
JZ R0,LABEL7
MOV R2,0
MOV R1,1
MOV R2,BP
ADD R1,R2
PUSH R0
PUSH R1
MOV R2,-4
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
PUSH R2
MOV R2,-3
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
PUSH R2
PUSH R2
CALL partition
POP R2
POP R2
POP R2
POP R1
POP R0
MOV R2,BP
MOV R3,7
ADD R2,R3
MOV R2,[R2]
MOV [R1],R2
MOV R2,0
MOV R1,2
MOV R2,BP
ADD R1,R2
PUSH R0
PUSH R1
PUSH R0
PUSH R1
MOV R2,1
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
PUSH R2
MOV R2,-4
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
PUSH R2


MOV R3,0
MOV R2,1
MOV R3,BP
ADD R2,R3
MOV R2,[R2]
MOV R3,1
SUB R2,R3

PUSH R2
PUSH R2
CALL quicksort
POP R2
POP R2
POP R2
POP R2
POP R1
POP R0
MOV R3,BP
MOV R4,8
ADD R3,R4
MOV R3,[R3]
PUSH R3
MOV R4,1
MOV R5,BP
ADD R4,R5
MOV R4,[R4]
PUSH R4
MOV R4,-4
MOV R5,BP
ADD R4,R5
MOV R4,[R4]
PUSH R4
PUSH R4
CALL quicksort
POP R4
POP R4
POP R4
POP R3
POP R1
POP R0
MOV R4,BP
MOV R5,8
ADD R4,R5
MOV R4,[R4]
MOV [R1],R4
LABEL7:
MOV R2,SP
MOV R3,5
SUB R2,R3
MOV SP,R2
MOV R2,BP
MOV R3,2
SUB R2,R3
MOV R3,0
MOV [R2],R3
MOV SP,BP
POP BP
RET


initialize:
PUSH BP
MOV BP,SP
MOV SP,BP
POP BP
RET


allocate:
PUSH BP
MOV BP,SP
MOV SP,BP
POP BP
RET


free:
PUSH BP
MOV BP,SP
MOV SP,BP
POP BP
RET
